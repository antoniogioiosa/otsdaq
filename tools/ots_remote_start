#!/bin/bash

SCRIPT_DIR="$( 
 cd "$(dirname "$(readlink "$0" || printf %s "$0")")"
 pwd -P 
)"

# Get color code variables
source ${SCRIPT_DIR}/colordefs.sh

# Why is there a giant arrow wasting my scrollback...
#echo -e "${Reset}"
#echo
#echo "  | "
#echo "  | "
#echo "  | "
#echo " _|_"
#echo " \ /"
#echo "  V "
#echo 

STARTTIME=`date +"%h%y.%T"` #to fully ID one StartOTS from another
echo -e "${Reset}${STARTTIME}  <==  ots started on {${HOSTNAME}}"
echo 
echo -e "${Reset}${STARTTIME}-"`date +"%h%y.%T"` "${HOSTNAME}-ots_remote [${Cyan}${LINENO}${Reset}]\t${Green}=========================== ots REMOTE ============================="
echo -e "${Reset}${STARTTIME}-"`date +"%h%y.%T"` "${HOSTNAME}-ots_remote [${Cyan}${LINENO}${Reset}]\tots script path     	= ${SCRIPT_DIR}/ots_remote_start"
echo -e "${Reset}${STARTTIME}-"`date +"%h%y.%T"` "${HOSTNAME}-ots_remote [${Cyan}${LINENO}${Reset}]\tExpected setup path     = ${SCRIPT_DIR}/../../../setup_ots.sh"
echo

cd ${SCRIPT_DIR}/../../../
source ${SCRIPT_DIR}/../../../setup_ots.sh

# This basically does the work of nohup but since we don't trust that ots isn't a function still we use bash job control
# detach ots from reading input, send output to log files and then we make it ignore sighup (which would propagate the
# signal to the child ssh running on remote nodes and make them exit which stops the remote ots script)

# TODO: Future better solution that actually handles this as a tree and tries to keep the SSH connections up so it can know if the ots/xdaq instances have died
# and can actually restart them without having to constantly ask

# NOTE: Because of this "solution" we don't have the log directory which is actually setup and used in ots.sh only even though otsenv.sh setup the paths
# probably should try to extracate those into otsenv.sh

# Ignore SIGHUP (passed down to children)
trap '' HUP
ots -s >/dev/null 2>&1 </dev/null & #disable remote launch to avoid infinite loop
wait # Wait on it because I think parent launcher script gets angry if SSH commands die even though it can't manage them properly

#done initializing StartOTS action file
#############################

#############################

echo -e "${Reset}"
echo -e "${Reset}"










